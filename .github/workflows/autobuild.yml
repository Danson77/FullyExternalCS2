name: Build and Release .NET Single EXE

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest

    env:
      Project_Path: CS2Cheat.csproj
      Output_Dir: publish

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check if source code changed
      id: check_changes
      uses: dorny/paths-filter@v2
      with:
        filters: |
          code:
            - '**/*.cs'
            - '**/*.csproj'

    - name: Get last commit message
      id: last_commit
      run: |
        echo "commit_message=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT

    - name: Build and publish project
      if: steps.check_changes.outputs.code == 'true'
      run: dotnet publish $env:Project_Path -c Release -o $env:Output_Dir -r win-x64 /p:PublishSingleFile=true /p:IncludeNativeLibrariesForSelfExtract=true /p:IncludeAllContentForSelfExtract=true /p:DeleteExistingFiles=true --self-contained false
      env:
        DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

    - name: Upload executable artifact
      if: steps.check_changes.outputs.code == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: Built-Executable
        path: ${{ env.Output_Dir }}/*.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    if: needs.build.outputs.code == 'true'  

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download build artifact
      uses: actions/download-artifact@v3
      with:
        name: Built-Executable

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.run_number }}-autobuild
        name: Release v${{ github.run_number }}-autobuild
        body: |
          Автоматический билд и релиз.
          Последний коммит:
          ```
          ${{ needs.build.steps.last_commit.outputs.commit_message }}
          ```
        files: "*.exe"
